{"version":3,"sources":["components/clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","dateTimer","this","window","setInterval","setState","prevProps","name","props","console","log","clearInterval","timeString","toLocaleTimeString","className","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","clockName","timerId","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,UAAY,EALd,uDAOE,WAAqB,IAAD,OAGlBC,KAAKD,UAAYE,OAAOC,aAAY,WAClC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,SACzB,OAZP,gCAeE,SAAmBM,GACbA,EAAUC,OAASL,KAAKM,MAAMD,MAEhCE,QAAQC,IAAR,wBAA6BJ,EAAUC,KAAvC,iBAAoDL,KAAKM,MAAMD,KAA/D,QAlBN,kCAuBE,WACEJ,OAAOQ,cAAcT,KAAKD,aAxB9B,oBA2BE,WACE,IAAQF,EAASG,KAAKJ,MAAdC,KACAQ,EAASL,KAAKM,MAAdD,KACFK,EAAab,EAAKc,qBAExB,OACE,qCACE,wBAAQC,UAAU,cAAlB,SACGP,IAGF,YAED,sBAAMO,UAAU,cAAhB,SACIF,WAzCZ,GAA2BG,aCN3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACExB,MAAyB,CACvByB,UAAU,EACVC,UAAWR,KAHf,EAMES,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAElBvB,KAAKuB,QAAUtB,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEmB,UAAWR,QAC1B,MAEHU,SAASC,iBAAiB,eAAe,WACvC,EAAKtB,SAAS,CAAEkB,UAAU,OAG5BG,SAASC,iBAAiB,SAAS,WACjC,EAAKtB,SAAS,CAAEkB,UAAU,SAnBhC,oBAuBE,WACE,MAAgCrB,KAAKJ,MAA7ByB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKV,UAAU,MAAf,UACE,6CAEA,qBAAKA,UAAU,QAAf,SACIS,GACA,cAAC,EAAD,CAAOhB,KAAMiB,aAhCzB,GAAyBT,aCZzBa,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.6ad21bf9.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string\n};\n\ntype State = {\n  date: Date,\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  dateTimer = 0;\n\n  componentDidMount() {\n    // const date = new Date();\n\n    this.dateTimer = window.setInterval(() => {\n      this.setState({ date: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`Renamed from <${prevProps.name}> to <${this.props.name}>`);\n    }\n  }\n\n  // this code stops the timer\n  componentWillUnmount() {\n    window.clearInterval(this.dateTimer);\n  }\n\n  render() {\n    const { date } = this.state;\n    const { name } = this.props;\n    const timeString = date.toLocaleTimeString();\n\n    return (\n      <>\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          { timeString }\n        </span>\n      </>\n\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: getRandomName(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    // This code starts a name timer\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', () => {\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        <div className=\"Clock\">\n          { hasClock && (\n            <Clock name={clockName} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}